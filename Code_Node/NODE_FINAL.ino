#include <HardwareSerial.h>
#include <TinyGPSPlus.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Khai b√°o ch√¢n v√† c·∫•u h√¨nh cho c√°c thi·∫øt b·ªã
#define BUTTON_PIN 34  // GPIO34 cho n√∫t nh·∫•n SOS
#define SCREEN_WIDTH 128  // ƒê·ªô r·ªông m√†n h√¨nh OLED (128 pixel)
#define SCREEN_HEIGHT 32  // Chi·ªÅu cao m√†n h√¨nh OLED (32 pixel)
#define OLED_RESET -1  // Ch√¢n reset OLED (kh√¥ng s·ª≠ d·ª•ng)
#define SCREEN_ADDRESS 0x3C  // ƒê·ªãa ch·ªâ I2C c·ªßa m√†n h√¨nh OLED SSD1306
#define RXD2 16  // Ch√¢n RX UART2 c·ªßa ESP32 n·ªëi v·ªõi TX c·ªßa LoRa
#define TXD2 17  // Ch√¢n TX UART2 c·ªßa ESP32 n·ªëi v·ªõi RX c·ªßa LoRa
#define M0 19  // Ch√¢n ƒëi·ªÅu khi·ªÉn ch·∫ø ƒë·ªô LoRa
#define M1 18  // Ch√¢n ƒëi·ªÅu khi·ªÉn ch·∫ø ƒë·ªô LoRa
#define BUZZER 25  // Ch√¢n ƒëi·ªÅu khi·ªÉn LED/Buzzer b√°o SOS

// Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng OLED
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// C·∫•u h√¨nh UART cho GPS
static const int RXPin = 4, TXPin = 5;  // Ch√¢n UART2 cho GPS
static const uint32_t GPSBaud = 9600;  // T·ªëc ƒë·ªô baud GPS

// Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng GPS v√† UART
TinyGPSPlus gps;  // ƒê·ªëi t∆∞·ª£ng x·ª≠ l√Ω d·ªØ li·ªáu GPS
HardwareSerial mySerial(1);  // UART2 cho GPS
HardwareSerial LoRa(2);  // UART2 cho LoRa

// Khai b√°o bi·∫øn to√†n c·ª•c
bool SOS = false;  // Tr·∫°ng th√°i SOS (true: k√≠ch ho·∫°t, false: b√¨nh th∆∞·ªùng)
unsigned long previousMillis = 0;  // Th·ªùi ƒëi·ªÉm l·∫ßn g·ª≠i t√≠n hi·ªáu tr∆∞·ªõc
const long interval = 10000;  // Kho·∫£ng th·ªùi gian g·ª≠i t√≠n hi·ªáu SOS (10s)
float Latitude, Longitude;  // L∆∞u t·ªça ƒë·ªô GPS d·∫°ng s·ªë th·ª±c
String LatitudeString, LongitudeString, s;  // Chu·ªói t·ªça ƒë·ªô v√† d·ªØ li·ªáu g·ª≠i LoRa
bool lastSOSState = false;  // L∆∞u tr·∫°ng th√°i SOS tr∆∞·ªõc ƒë√≥

void setup() {
    Serial.begin(115200);  // Kh·ªüi t·∫°o Serial ƒë·ªÉ debug
    pinMode(BUTTON_PIN, INPUT);  // C·∫•u h√¨nh n√∫t nh·∫•n SOS l√† input
    mySerial.begin(GPSBaud, SERIAL_8N1, RXPin, TXPin);  // Kh·ªüi t·∫°o UART cho GPS
    LoRa.begin(9600, SERIAL_8N1, RXD2, TXD2);  // Kh·ªüi t·∫°o UART cho LoRa
    pinMode(M0, OUTPUT);  // C·∫•u h√¨nh ch√¢n M0 LoRa
    pinMode(M1, OUTPUT);  // C·∫•u h√¨nh ch√¢n M1 LoRa
    digitalWrite(M0, LOW);  // ƒê·∫∑t LoRa ·ªü ch·∫ø ƒë·ªô Normal
    digitalWrite(M1, LOW);  // ƒê·∫∑t LoRa ·ªü ch·∫ø ƒë·ªô Normal
    pinMode(BUZZER, OUTPUT);  // C·∫•u h√¨nh ch√¢n LED/Buzzer
    digitalWrite(BUZZER, LOW);  // T·∫Øt LED/Buzzer ban ƒë·∫ßu
    Serial.println("üöÄ Module LoRa E32-433T20D ƒëang kh·ªüi ƒë·ªông...");
    delay(1000);  // ƒê·ª£i 1s ƒë·ªÉ ·ªïn ƒë·ªãnh

    // Kh·ªüi ƒë·ªông m√†n h√¨nh OLED
    if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
        Serial.println(F("SSD1306 kh√¥ng t√¨m th·∫•y! Ki·ªÉm tra k·∫øt n·ªëi."));
    }
    display.clearDisplay();  // X√≥a m√†n h√¨nh OLED
    display.setTextSize(1);  // C·ª° ch·ªØ nh·ªè
    display.setTextColor(SSD1306_WHITE);  // M√†u ch·ªØ tr·∫Øng
}

void loop() {
    KT_NUT_NHAN_S0S();  // Ki·ªÉm tra tr·∫°ng th√°i n√∫t nh·∫•n SOS
    KT_TRANG_THAI();  // Ki·ªÉm tra v√† x·ª≠ l√Ω tr·∫°ng th√°i SOS/b√¨nh th∆∞·ªùng
    HIENTHI_TREN_OLED();  // C·∫≠p nh·∫≠t hi·ªÉn th·ªã th·ªùi gian v√† tr·∫°ng th√°i tr√™n OLED
}

void KT_NUT_NHAN_S0S() {
    // Ki·ªÉm tra n√∫t nh·∫•n SOS
    if (digitalRead(BUTTON_PIN) == LOW) {
        delay(50);  // Ch·ªëng nhi·ªÖu n√∫t nh·∫•n
        if (digitalRead(BUTTON_PIN) == LOW) {
            while (digitalRead(BUTTON_PIN) == LOW) {}  // ƒê·ª£i th·∫£ n√∫t
            SOS = !SOS;  // ƒê·ªïi tr·∫°ng th√°i SOS (b·∫≠t/t·∫Øt)
        }
    }
}

void KT_TRANG_THAI() {
    if (SOS == false) {
        Serial.println("BINH THUONG");  // Tr·∫°ng th√°i b√¨nh th∆∞·ªùng
        digitalWrite(BUZZER, LOW);  // T·∫Øt LED/Buzzer
    } else {
        Serial.println("TRANG THAI SOS");  // Tr·∫°ng th√°i SOS
        TRANG_THAI_SOS();  // G·ª≠i t√≠n hi·ªáu SOS
        digitalWrite(BUZZER, HIGH);  // B·∫≠t LED/Buzzer
    }
}

void HIENTHI_TREN_OLED() {
    // Nh·∫≠n v√† x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ GPS
    while (mySerial.available()) {
        gps.encode(mySerial.read());  // ƒê·ªçc v√† gi·∫£i m√£ d·ªØ li·ªáu GPS
    }
    // L∆∞u th·ªùi gian GPS g·∫ßn nh·∫•t
    static int lastHour, lastMinute, lastSecond;
    if (gps.time.isValid()) {
        lastHour = gps.time.hour();
        lastMinute = gps.time.minute();
        lastSecond = gps.time.second();
    }

    // Hi·ªÉn th·ªã tr√™n OLED
    display.clearDisplay();  // X√≥a m√†n h√¨nh
    display.setTextSize(1);  // C·ª° ch·ªØ
    display.setTextColor(SSD1306_WHITE);  // M√†u ch·ªØ tr·∫Øng

    // Hi·ªÉn th·ªã th·ªùi gian (UTC+7)
    display.setCursor(0, 0);
    display.print("Time: ");
    display.print(lastHour + 7);  // ƒêi·ªÅu ch·ªânh m√∫i gi·ªù
    display.print(":");
    if (lastMinute < 10) display.print("0");
    display.print(lastMinute);
    display.print(":");
    if (lastSecond < 10) display.print("0");
    display.print(lastSecond);

    // Hi·ªÉn th·ªã tr·∫°ng th√°i
    display.setCursor(0, 10);
    if (SOS) {
        display.print("DANG GUI TIN HIEU SOS...");  // Th√¥ng b√°o tr·∫°ng th√°i SOS
    } else {
        display.print("CLICK BUTTON ON SOS");  // Th√¥ng b√°o tr·∫°ng th√°i b√¨nh th∆∞·ªùng
    }
    display.display();  // C·∫≠p nh·∫≠t m√†n h√¨nh
}

void TRANG_THAI_SOS() {
    // Nh·∫≠n v√† x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ GPS
    while (mySerial.available()) {
      display.print("Dang cap nhat GPS: ");
        gps.encode(mySerial.read());  // ƒê·ªçc v√† gi·∫£i m√£ d·ªØ li·ªáu GPS
    }
    // G·ª≠i t·ªça ƒë·ªô qua LoRa m·ªói 10s
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= interval) 
       {
        if(gps.location.isValid())
        {
        previousMillis = currentMillis;
        Serial.println("üì° G·ª≠i t·ªça ƒë·ªô qua LoRa:");
        Latitude = gps.location.lat();  // L·∫•y vƒ© ƒë·ªô
        LatitudeString = String(Latitude, 6);  // Chuy·ªÉn vƒ© ƒë·ªô th√†nh chu·ªói
        Longitude = gps.location.lng();  // L·∫•y kinh ƒë·ªô
        LongitudeString = String(Longitude, 6);  // Chuy·ªÉn kinh ƒë·ªô th√†nh chu·ªói
        s = "SOS1:https://www.google.com/maps?q=";  // T·∫°o chu·ªói ƒë·ªãnh d·∫°ng link Google Maps
        s += LatitudeString + "," + LongitudeString + "\n";
        LoRa.println(s);  // G·ª≠i d·ªØ li·ªáu qua LoRa
        Serial.println("üì° da gui toa do.");
        }
        else
        {
        LoRa.println("SOS1:khong nhan duoc toa do");  // G·ª≠i d·ªØ li·ªáu qua LoRa
        Serial.println("khong nhan duoc toa do");          
        }
        
    }
}